!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define(n):"object"==typeof exports?exports.Echo=n():e.Echo=n()}(this,function(){return function(e){function n(o){if(r[o])return r[o].exports;var t=r[o]={exports:{},id:o,loaded:!1};return e[o].call(t.exports,t,t.exports,n),t.loaded=!0,t.exports}var r={};return n.m=e,n.c=r,n.p="",n(0)}([function(e){"use strict";function n(e,n){function r(n){function r(){t.apply(null,[n,E[v]].concat(f.call(arguments)))}return r.displayName="console abstraction for "+e+":"+n,o(n,r),r}function o(n,r){j.forEach(function(o){r[o]=function(){t.apply(null,[n,E[o]].concat(f.call(arguments)))},r[o].displayName=""+o+" colored console abstraction for "+e+":"+n})}function t(e,n){var r=f.call(arguments,2);return g&&k&&c(w)?(r=i(r,n),x[e].apply(x,r)):void 0}function a(e){return w=u(w,e)}function d(e){return k=s(k,e)}function m(){if(b.undefined(e))throw new Error("echo name must be defined");if(!b.undefined(y[e]))throw new Error("echo by the name of "+e+" already exists. Cannot create another of the same name.");if(l(w),!b.undefined(v)&&!b.string(E[v]))throw new Error("echo defaultColor (value: "+v+") must be a string specified in colors ("+Object.keys(E)+")");if(!Array.isArray(N))throw new Error("logFns must be an array of strings");var n=N.some(function(e){return!b.string(e)||!b.fn(x[e])});if(n)throw new Error("echo's logger (value: "+x+") must implement these functions: "+N.join(", ")+" (which must all be function names as strings)")}var w=n.rank,v=n.defaultColor,E=n.colors,k=n.enabled,x=n.logger,N=n.logFns;w=b.undefined(w)?5:w,k=b.undefined(k)?!0:k,E=b.undefined(E)?h:E,x=b.undefined(x)?console:x,N=b.undefined(N)?p:N,m(e,w,v,E,x,N);var j=Object.keys(E),A=r("log");return A.rank=a,A.enabled=d,N.forEach(function(e){return A[e]=r(e)}),A.displayName='echo: "'+e+'" abstraction on console',A.rank.displayName="echo.rank: getter/setter for the current level of logging (high is more)",t.displayName="echo log wrapper that checks whether the echo is enabled and if its rank is high enough compared to Echo.rank()",m.displayName="Echo.create arg checker that ensures all arguments are correct and throws errors if not",y[e]=A,A}function r(e){return b.undefined(e)?y:y[e]}function o(e){b.undefined(e)?y={}:delete y[e]}function t(e){return g=s(g,e)}function a(e){return m=u(m,e)}function i(e,n){return!d&&n&&(e.splice(1,0,n),e[0]="%c"+e[0]),e}function c(e){return m>=e}function u(e,n){return b.undefined(n)||(l(n),e=n),e}function s(e,n){if(!b.undefined(n)){if(!b["boolean"](n))throw new Error('echo.enabled must pass nothing or a boolean. "'+n+'" was passed');e=n}return e}function l(e){if(!b.number(e)||0>e||e>5)throw new Error("echo rank (value: "+e+") must be numbers between 0 and 5 (inclusive). 0 is less logs, 5 is more.")}var f=Array.prototype.slice,d=function(){var e=window.navigator.userAgent;return e.indexOf("MSIE ")>0||e.indexOf("Trident/")>0}(),h={green:"color:green",purple:"color:rebeccapurple",blue:"color:cornflowerblue",red:"color:crimson",gray:"color:#919191"},p=["log","info","debug","warn","error"],m=5,g=!0,b={};["undefined","string",{name:"fn",type:"function"},"boolean","number"].forEach(function(e){b[e.name||e]=function(n){return typeof n===(e.type||e)}});var y={},w={create:n,get:r,remove:o,rank:a,enabled:t};n.displayName="Echo.create: Makes a new instance of Echo",r.displayName="Get an echo logger by name",o.displayName="Remove an echo logger",a.displayName="Set the global Echo rank. Must be a number 0-5 inclusive. 0 is less logs, 5 is more.",e.exports=w}])});
//# sourceMappingURL=echo.min.js.map